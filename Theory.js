/* ТЕОРИЯ ПО HTML */

/* 
ПЛАН
- Компоненты веб-сайта
- Как клиенты взаимодействуют с серверами
- Структура HTML-страницы и теги HTML
- Создание HTML-страницы с разными тегами
- Подключение библиотеки таблиц стилей CSS (Bootstrap)
- Несколько HTML-страниц и навигация между ними
*/

/* 
Компоненты веб-сайтов

HTML (HyperText Markup Language) - язык гипертекстовой разметки (каркас автомобиля) 
CSS (Cascading Style Sheets) - стили (внешний вид автомобиля - стилизация автомобиля)
JS (JavaScript) - язык программирования (двигатель автомобиля)

С помошью HTML можно указывать, где находится кнопка, форма, текстовый блок, изображение
*/

/*
Как клиенты взаимодействуют с серверами?

Клиент может получать ресурсы с разных серверов
Клиенты загружают с серверов различные файлы (HTML, CSS, JS, IMG - изображения)
Различные ресурсы клиент может загружать с разных серверов
Например, HTML, CSS и JS - с одного, IMG - с другого

HTTP (HyperText Transfer Protocol) - протокол передачи гипертекстов
Это протокол для получения файлов с серверов
Этот протокол передаёт данные в открытом виде, без шифрования 
Для того, чтобы обезопасить HTTP используют
протокол TLS (Transport Layer Security - безопасность транстпортного уровня)
Комбинация HTTP и TLS даёт протокол HTTPS (HyperText Transfer Protocol Secure)
HTTPS (безопасный протокол передачи гипертекстов) сейчас используется для получения данных
любыми веб-сайтами 
Клиент получает от сервера цифровой сертификат, который он может проверить,
и продолжить загрузку ресурсов, только если клиент доверяет серверу 
Ключи шифрования известны только клиенту и серверу 
*/

/* 
Структура HTML-страницы и теги HTML

Структура HTML:
<!DOCTOR html>
<html lang="ru">
  <head>
    <title>Мой сайт</title>
  </head>
  <body>
    <h1>Привет!</h1>
  </body>
</html>

Теги HTML
- html // корневой тег
- head // метаинформация для описания HTML-страницы
       // можно добавлять ссылки на таблицы стилей, JS-файлы, текстовое описание страницы 
- body // основной тег, в который добавляются все остальные теги
- div // (division - разделение) - для него можно добавлять различные таблицы стилей
      // и стилизовать отображение того или иного блока на веб-странице
- a // (anchor) позволяет добавлять различные гиперссылки, как внутренние (между страницами веб-сайта)
    // так и внешние 
- img // позволяет вставлять различные изображения, есть атрибут,
      // с помощью которого указывается местоположение файла изображения
      // файлы изображения могут находиться на том же сервере, где хранится HTML-страница,
      // а также на других внешних серверах
- h1 // (heading - заголовок), с помощью него и тегов h2, h3 и т. д.
     // можно добавлять заголовки на веб-страницу, h1 имеет самый большой размер текста
     // h1, h2 ... будут иметь меньший размер текста,
     // рекомендуется использовать только один h1 тег
- p // (paragraph - параграф) - позволяет добавлять большие блоки текста
- meta // используется внутри тега head, позволяет добавлять метаинформацию о странице
       // например, с помощью мета-тега description можно добавить текстовое описание для сайта
- link // ссылка на другой файл, который должен подключиться к веб-сайту
       // с помощью этого тега добавляют ссылки на таблицы стилей,
       // они находятся в других файлах, которые подключаются к HTML-странице
- style // позволяет в теле HTML-страницы добавить стили CSS, но рекомендуется выносить стили
        // во внешние CSS-файлы и включать их, используя тег link 
- script // позволяет добавлять в HTML-файл JS-код 

html, head, body присутствуют в любой HTML-странице
Все теги в <>, <...> - открывающий тег, </...> закрывающий тег
<button class="btn"> Нажми меня </button> // У HTML-тегов могут быть различные атрибуты 
                                          // через разделитель пробел
// здесь атрибут - class
<img src="img.jpg" class="rounded-img" alt="My photo" />
// атрибут src задаёт имя файла для изображения, такое имя файла указывает, что изображение находится
   локально на том же сервере, что и html-страница
// атрибут class позволяет добавлять стили для html-страницы
// атрибут alt позволяет добавить описание для определённого изображения 
// в данном случае img - это самозакрывающийся тег, так как в конце />,
   у него нет закрывающегося тега </img>, так как в теле этого тега ничего не будет
   мы закрываем тег в открывающем теге
*/

/*
Ссылка на документацию Bootstrap
https://getbootstrap.com/docs/5.3

Ссылка на все классы Bootstrap
https://bootstrapshuffle.com/classes

Ссылка на создание логотипа
https://maketext.io/

Cайт с бесплатными фотографиями Lorem Picsum 
(вставляются по ссылке
  пример:
  https://picsum.photos/id/1015/300
  (1015 - id фотографии, 300 пикселей - размер фотографии (300 на 300), есть и другие атрибуты, помимо размера, в ссылке по типу блюра и т. д.)
)
(ссылка https://picsum.photos работает только через vpn)

Ссылка на конвертор изображения в определённый формат (<число>x<число>)
https://superimageconverter.com/resize-image-to-400x400/

Ссылка на создание логотипа у страницы в браузере сверху
https://favicon.io/favicon-generator/
*/

/*
Мы сделали наш сайт полностью адаптивным, то есть познакомились с АДАПТИВНЫМ ПОЛЬЗОВАТЕЛЬСКИМ ИНТЕРФЕЙСОМ, но мы создали лишь СТАТИЧНЫЕ страницы, так какждую страницу придётся добавлять и менять вручную. Для решения этой проблемы используются фреймворки и библиотеки для создания ОДНОСТРАНИЧНЫХ приложений - одностраничных сайтов (SPA - single page application). В таких сайтах HTML-страница только одна, вся навигация и логика завязана на JS.
Примеры SPA:
- React - самая популярная библиотека для SPA
- Angular
- Vue
- Svelte
- Ember
- Ruby 
и другие
*/
